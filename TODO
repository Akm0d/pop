This is the foundation of Rosso, I think I have it figured out this time.

This will take years of work, but I think it is worth it

POP
====
First we need plugin oriented Programming, take the existing models but remove the hub,
everything is a pack, no more trine concept

Speed up contracts and local lookups


AIOProc
=======

The proc system is started up and takes refs and args/kwargs as input. Those refs are sent to
a worker process to evaluate them and spit back a return.

The proce system spins up exec processes (no forks!) that bind to a predeterminied port
and recive the ref/args/kwargs payload via an established socket connection using the io
library.

Tasks to create:

Make the ref resolution system - Done
Add tests! - Done
Make the io library so it is easy to create aio servers/clients - Why do we need to wrap this?
Add tests!
Make the proc system that can spin up a proc that runs the proc server and io loop
Make the aio communication system so that we can make tons of connections
Add tests!

Tools
=====

Merge conf into tools, and add in packs for:
aioproc
process manager
logging
network topologies - aio

Then we can start on Rosso, it will have a number of application enabled network topologies and we will
pull concepts in from Salt as well.
